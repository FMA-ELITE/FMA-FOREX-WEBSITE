import os
from flask import Flask, request, jsonify
from africastalking.SMS import SMSService
from africastalking.voice import VoiceService
from africastalking.payment import PaymentService

app = Flask(__name__)

# Enhanced initialization
try:
    username = os.environ.get('AT_USERNAME')
    api_key = os.environ.get('AT_API_KEY')
    
    if not username or not api_key:
        raise RuntimeError("Missing Africa's Talking credentials in environment variables")
    
    payments = PaymentService(username, api_key)
    print("✅ Africa's Talking initialized successfully")
except Exception as e:
    print(f"❌ AT Initialization failed: {str(e)}")
    payments = None

@app.route('/pay', methods=['POST'])
def handle_payment():
    if not payments:
        return jsonify({"status": "error", "message": "Payment service unavailable"}), 503
        
    try:
        data = request.get_json()
        
        # Strict validation
        if not data or 'phone' not in data or 'amount' not in data:
            return jsonify({"status": "error", "message": "Missing phone/amount"}), 400
            
        response = payments.mobile_checkout(
            product_name=data.get('product_name', 'FMA_Payment'),
            phone_number=data['phone'],
            currency_code="UGX",
            amount=str(data['amount']),
            metadata=data.get('metadata', {})
        )
        
        return jsonify({
            "status": "success", 
            "transaction_id": response['transactionId']
        })
        
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

@app.route('/health')
def health_check():
    return jsonify({
        "status": "running",
        "port": 10000,
        "at_ready": bool(payments)
    })

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000, debug=False)  # Debug MUST be False in production